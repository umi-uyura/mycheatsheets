---
tags: [json,jq,tips]
---
#
# jq example
#

# Example json
#
# [
#   {
#     "id": 1,
#     "timestamp": 1672412400,
#     "name": {
#       "firstname": "Taro",
#       "lastname": "Yamada"
#     }
#   },
#   {
#     "id": 2,
#     "timestamp": 1672498800,
#     "name": {
#       "firstname": "Hanako",
#       "lastname": "Honda"
#     }
#   },
#   ...
# ]

$ jq '.[0]'
{
  "id": 1,
  "timestamp": 1672412400,
  "name": {
    "firstname": "Taro",
    "lastname": "Yamada"
  }
}

$ jq '.[].timestamp'
1672412400
1672498800

$ jq -r '.[] | {first: .name.firstname, last: .name.lastname}'
{
  "first": "Taro",
  "last": "Yamada"
},
{
  "first": "Hanako",
  "last": "Honda"
}

$ jq '.[] | .name.firstname + " " + .name.lastname'
"Taro Yamada"
"Hanako Honda"

$ jq -r '.[] | .name.firstname + " " + .name.lastname'
Taro Yamada
Hanako Honda

$ jq -r '.[] | "\(.name.lastname) \(.name.firstname)"'
Taro Yamada
Hanako Honda

# Count string/array/object(key-value pair)
$ jq '. | length'
2


#
# Sort
#

$ jq '. | sort_by(.timestamp)'
1672412400
1672498800

$ jq '. | sort_by(.timestamp) | reverse'
1672498800
1672412400

$ jq '. | sort_by(.timestamp, .id)'
1672412400
1672498800


#
# Convert
#

# Convert number to string
$ jq '.[].timestamp|tostring'
"1672412400"
"1672498800"

$ jq -r '.[] | [.id, .timestamp] | @csv'
1,1672412400
2,1672498800
